parameters:
	magento:
		checkCollectionViaFactory: true
		checkServiceContracts: true
		magentoRoot: %currentWorkingDirectory%
	bootstrapFiles:
		- magento-autoloader.php
parametersSchema:
	magento: structure([
		checkCollectionViaFactory: bool()
		checkServiceContracts: bool()
		magentoRoot: string()
	])

conditionalTags:
	bitExpert\PHPStan\Magento\Rules\AbstractModelRetrieveCollectionViaFactoryRule:
		phpstan.rules.rule: %magento.checkCollectionViaFactory%
	bitExpert\PHPStan\Magento\Rules\AbstractModelUseServiceContractRule:
		phpstan.rules.rule: %magento.checkServiceContracts%

services:
	-
		class: bitExpert\PHPStan\Magento\Type\ObjectManagerDynamicReturnTypeExtension
		tags:
			- phpstan.broker.dynamicMethodReturnTypeExtension
	-
		class: bitExpert\PHPStan\Magento\Type\TestFrameworkObjectManagerDynamicReturnTypeExtension
		tags:
			- phpstan.broker.dynamicMethodReturnTypeExtension
	-
		class: bitExpert\PHPStan\Magento\Reflection\Framework\Session\SessionManagerMagicMethodReflectionExtension
		tags:
			- phpstan.broker.methodsClassReflectionExtension
	-
		class: bitExpert\PHPStan\Magento\Reflection\Framework\DataObjectMagicMethodReflectionExtension
		tags:
			- phpstan.broker.methodsClassReflectionExtension
	-
		class: bitExpert\PHPStan\Magento\Rules\GetCollectionMockMethodNeedsCollectionSubclassRule
		tags:
			- phpstan.rules.rule
	-
		class: bitExpert\PHPStan\Magento\Rules\AbstractModelRetrieveCollectionViaFactoryRule
	-
		class: bitExpert\PHPStan\Magento\Rules\AbstractModelUseServiceContractRule
	fileCacheStorage:
		class: bitExpert\PHPStan\Magento\Autoload\Cache\FileCacheStorage
		arguments:
			directory: %tmpDir%/cache/PHPStan
	autoloaderCache:
		autowired: false
		class: PHPStan\Cache\Cache
		arguments:
			storage: @fileCacheStorage
	extensionAttributeDataProvider:
		class: bitExpert\PHPStan\Magento\Autoload\DataProvider\ExtensionAttributeDataProvider
		arguments:
			magentoRoot: %magento.magentoRoot%
	classLoaderProvider:
		class: bitExpert\PHPStan\Magento\Autoload\DataProvider\ClassLoaderProvider
		arguments:
			magentoRoot: %magento.magentoRoot%
	mockAutoloader:
		class: bitExpert\PHPStan\Magento\Autoload\MockAutoloader
		tags:
			- phpstan.magento.autoloader
	testFrameworkAutoloader:
		class: bitExpert\PHPStan\Magento\Autoload\TestFrameworkAutoloader
		arguments:
			magentoRoot: %magento.magentoRoot%
		tags:
			- phpstan.magento.autoloader
	factoryAutoloader:
		class: bitExpert\PHPStan\Magento\Autoload\FactoryAutoloader
		arguments:
			cache: @autoloaderCache
			classLoaderProvider: @classLoaderProvider
		tags:
			- phpstan.magento.autoloader
	proxyAutoloader:
		class: bitExpert\PHPStan\Magento\Autoload\ProxyAutoloader
		arguments:
			cache: @autoloaderCache
			classLoaderProvider: @classLoaderProvider
		tags:
			- phpstan.magento.autoloader
	extensionInterfaceAutoloader:
		class: bitExpert\PHPStan\Magento\Autoload\ExtensionInterfaceAutoloader
		arguments:
			cache: @autoloaderCache
			attributeDataProvider: @extensionAttributeDataProvider
			classLoaderProvider: @classLoaderProvider
		tags:
			- phpstan.magento.autoloader
	extensionAutoloader:
		class: bitExpert\PHPStan\Magento\Autoload\ExtensionAutoloader
		arguments:
			cache: @autoloaderCache
			attributeDataProvider: @extensionAttributeDataProvider
		tags:
			- phpstan.magento.autoloader
